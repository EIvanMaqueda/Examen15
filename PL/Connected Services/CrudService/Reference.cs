//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL.CrudService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CrudService.ICRUD")]
    public interface ICRUD {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/Add", ReplyAction="http://tempuri.org/ICRUD/AddResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Proyecto_ENT.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Proyecto_ENT.Producto))]
        Proyecto_ENT.Result Add(Proyecto_ENT.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/Add", ReplyAction="http://tempuri.org/ICRUD/AddResponse")]
        System.Threading.Tasks.Task<Proyecto_ENT.Result> AddAsync(Proyecto_ENT.Producto producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/GetAll", ReplyAction="http://tempuri.org/ICRUD/GetAllResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Proyecto_ENT.Producto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        Proyecto_ENT.Result GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/GetAll", ReplyAction="http://tempuri.org/ICRUD/GetAllResponse")]
        System.Threading.Tasks.Task<Proyecto_ENT.Result> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICRUDChannel : PL.CrudService.ICRUD, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CRUDClient : System.ServiceModel.ClientBase<PL.CrudService.ICRUD>, PL.CrudService.ICRUD {
        
        public CRUDClient() {
        }
        
        public CRUDClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CRUDClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRUDClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRUDClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Proyecto_ENT.Result Add(Proyecto_ENT.Producto producto) {
            return base.Channel.Add(producto);
        }
        
        public System.Threading.Tasks.Task<Proyecto_ENT.Result> AddAsync(Proyecto_ENT.Producto producto) {
            return base.Channel.AddAsync(producto);
        }
        
        public Proyecto_ENT.Result GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Proyecto_ENT.Result> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
